name: CI
on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      # Try to install with frozen lockfile first
      - name: Install dependencies (frozen)
        id: frozen-install
        run: pnpm install --frozen
        continue-on-error: true

      # If frozen install fails, update the lockfile
      - name: Install dependencies (update lockfile)
        if: steps.frozen-install.outcome == 'failure'
        run: pnpm install --no-frozen-lockfile

      - name: Lint
        run: pnpm lint --max-warnings 50

      - name: Check build
        run: pnpm build

  # Note: The actual publishing is handled by the release.yml workflow
  # This job is kept to maintain backward compatibility
  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      # Try to install with frozen lockfile first

      # If frozen install fails, update the lockfile
      - name: Install dependencies (update lockfile)
        if: steps.frozen-install-publish.outcome == 'failure'
        run: pnpm install --no-frozen-lockfile

      - name: Build package
        run: pnpm build

      - name: Semantic Release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: pnpm semantic-release
